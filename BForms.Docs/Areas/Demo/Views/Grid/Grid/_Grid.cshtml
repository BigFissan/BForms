@model UsersViewModel
@using BForms.Docs.Resources
@using BootstrapForms.Html
@using BootstrapForms.Grid
@using BootstrapForms.Models
@using BForms.Docs.Areas.Demo.Models
       
@{
    var baseBuilder = new BsGridHtmlBuilder<UsersViewModel, UsersGridRowModel>().HtmlAttributes(new Dictionary<string, object> { { "class", "cutom" } });
}
                                     
@(Html.BsGridFor(m => m.Grid)
        .MultipleSelectActions(Html.Partial("Grid/_Actions").ToString())
        .HtmlAttributes(new Dictionary<string, object>() { { "class", "custom_class" } })
        .RowHighlighter(row => row.Enabled ? "#59b444" : "#dd3131")
        .RowData(row => new Dictionary<string, object> { { "data-objid", row.Id }, { "data-active", row.Enabled } })
        .ConfigureColumns(cf =>
        {
            cf.Add(c => c.Name).Name(Resource.Name)
                                    .SetWidth(5)
                                    .Sortable();
            cf.Add(c => c.RegisterDate).Name(Resource.RegisterDate)
                                .SetWidth(4)
                                .Sortable()
                                .Text(x => x.RegisterDate.ToShortDateString());
            cf.Add(c => c.Enabled).Name(Resource.Enable)
                                .SetWidth(3)
                                .Sortable()
                                .Text(x => x.Enabled ? Resource.Yes : Resource.No);

            //cf.Remove(c => c.Enabled);

            cf.For(c => c.Name).Name(Resource.Name);
        })
)
