@using BForms.Docs.Helpers
@using BForms.Html
@using BForms.Grid
@using BForms.Models
@using BForms.Docs.Resources
@using BForms.Docs.Areas.Demo.Helpers
@using BForms.Docs.Areas.Demo.Models
@model ContributorsViewModel
                                
@(Html.BsGridFor(m => m.Grid)
        .Theme(Html.GetTheme())
        .GridResetButton()
        .ConfigureBulkActions(bulk =>
        {
            bulk.AddAction(BsBulkActionType.Excel);
            bulk.AddAction().StyleClass("btn-success js-btn-enable_selected").Title("Enable selected").GlyphIcon(Glyphicon.Ok);
            bulk.AddAction().StyleClass("btn-warning js-btn-disable_selected").Title("Disable selected").GlyphIcon(Glyphicon.Remove);
            bulk.AddAction(BsBulkActionType.Delete);

            bulk.AddSelector(BsBulkSelectorType.All);
            bulk.AddSelector().StyleClass("js-actives").Text(@Resource.Enabled);
            bulk.AddSelector().StyleClass("js-inactives").Text(@Resource.Disabled);
            bulk.AddSelector(BsBulkSelectorType.None);

            bulk.ForSelector(BsBulkSelectorType.All).Text(@Resource.All);
            bulk.ForSelector(BsBulkSelectorType.None).Text(@Resource.None);
        })
        .HtmlAttributes(new { @class = "custom_class" })
        .ConfigureColumns(cols =>
        {
            cols.For(c => c.Name).Name(Resource.Name)
                                 //.SetWidth(2)
                                 .Sortable();

            cols.For(c => c.Role).Name("Role")
                                //.SetWidth(3)
                                .Sortable()
                                .Text(row => Html.GetRoleIcon(row.Role) + " " + Html.BsEnumDisplayName(row.Role));

            cols.For(c => c.StartDate).Name("Contributor since")
                                //.SetWidth(3)
                                .Sortable()
                                .Text(row => Html.BsGlyphicon(Glyphicon.Calendar) + " " + row.StartDate.ToMonthNameDate());

            cols.For(c => c.Contributions).Name("Contributions")
                                //.SetWidth(4)
                                .Sortable()
                                .Text(row => string.IsNullOrEmpty(row.Contributions) ? "" : String.Join(", ", row.Contributions.Split(new[] { ',' }).Take(2)));

            cols.For(c => c.Name).Name(Resource.Name);
        })
        .ConfigureRows(cfg =>
        {
            cfg.HasDetails(row => row.Enabled ? true : false)
               .HasCheckbox(row => row.Enabled ? true : false)
               .HtmlAttributes(row => new Dictionary<string, object> { { "data-objid", row.Id }, { "data-active", row.Enabled } })
               .Highlighter(row => row.Enabled ? "#59b444" : "#f0ad4e");
        })
        .PagerSettings(new BsPagerSettings { Size = 5 })
)
