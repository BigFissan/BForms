@using BForms.Docs.Helpers
@using BForms.Html
@using BForms.Grid
@using BForms.Models
@using BForms.Docs.Resources
@using BForms.Docs.Areas.Demo.Helpers
@using BForms.Docs.Areas.Demo.Models
@model ContributorsViewModel


@{
    var builder = new BsGridHtmlBuilder<ContributorsViewModel, ContributorRowModel>().ConfigureColumns(cols =>
      {
          //cols.NoHeader();
          cols.For(row => row.Name).Name(Resource.Name)
              .Sortable();

          cols.For(row => row.Role).Name("Role")
              .Sortable()
              .Text(row => Html.GetRoleIcon(row.Role.DisplayValue) + " " + Html.BsEnumDisplayName(row.Role.DisplayValue));
          
          cols.For(row => row.StartDate).Name("Contributor since")
              .Sortable()
              .Text(row => Html.BsGlyphicon(Glyphicon.Calendar) + " " + row.StartDate.ToMonthNameDate());

          cols.For(row => row.Contributions).Name("Contributions")
              .Sortable()
              .Text(row => string.IsNullOrEmpty(row.Contributions.DisplayValue) ? "" : String.Join(", ", row.Contributions.DisplayValue.Split(new[] { ',' }).Take(2)));

          cols.For(row => row.Name).Name(Resource.Name);

          cols.For(row => row.Action).Name("").Text(RowButtonTemplate);
          
      });
}
@(Html.BsGridFor(m => m.Grid, builder)
        //.NoTitle()
      .NoResultsTemplate("Grid/_NoResults")
      .NoRecordsTemplate("Grid/_NoRecords")
      .GridResetButton()
      .ConfigureBulkActions(bulk =>
      {
          bulk.AddAction(BsBulkActionType.Excel);
          bulk.AddAction().StyleClass("btn-success js-btn-enable_selected").Title("Enable selected").GlyphIcon(Glyphicon.Ok);
          bulk.AddAction().StyleClass("btn-warning js-btn-disable_selected").Title("Disable selected").GlyphIcon(Glyphicon.Remove);
          bulk.AddAction(BsBulkActionType.Delete);

          bulk.AddSelector(BsBulkSelectorType.All);
          bulk.AddSelector().StyleClass("js-actives").Text(@Resource.Enabled);
          bulk.AddSelector().StyleClass("js-inactives").Text(@Resource.Disabled);
          bulk.AddSelector(BsBulkSelectorType.None);

          bulk.ForSelector(BsBulkSelectorType.All).Text(@Resource.All);
          bulk.ForSelector(BsBulkSelectorType.None).Text(@Resource.None);

      })
      .HtmlAttributes(new { @class = "custom_class" })
        //.AllowAddIfEmpty()

      .ConfigureRows(cfg => cfg.HasDetails(row => row.Enabled)
          .DetailsTemplate(row => Html.Partial("Grid/Details/_Index", row.Details))
          .HasCheckbox(row => (row.Enabled || !row.Name.DisplayValue.StartsWith("M")))
          .HtmlAttributes(row => new Dictionary<string, object> {{"data-active", row.Enabled}})
          .Highlighter(row => row.Enabled ? "#59b444" : "#f0ad4e"))
      .PagerSettings(new BsPagerSettings { NoOffset = false, Size = 5, HasPageSizeSelector = true, HasPagesText = true }))


@helper RowButtonTemplate(ContributorRowModel row)
{

    <a href="#" class="js-btn_delete js-inlineAction"><span class="glyphicon glyphicon-trash"></span></a>
}
