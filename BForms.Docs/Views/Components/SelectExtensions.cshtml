@{
    ViewBag.Title = "Select controls";
}

<div class="row">
    <div class="hidden-xs hidden-sm col-md-3 col-lg-3">
        <div class="bs-sidebar">
            <ul class="nav bs-sidenav">
                <li>
                    <a href="#select-section">Select inputs</a>
                    <ul class="nav">
                        <li><a href="#Select">Select helper</a></li>
                        <li><a href="#Select-DropDownList">DropDownList</a></li>
                        <li><a href="#Select-ListBox">ListBox</a></li>
                        <li><a href="#Select-CheckBoxList">CheckBoxList</a></li>
                        <li><a href="#Select-RadioButtonList">RadioButtonList</a></li>
                        <li><a href="#Select-TagList">TagList</a></li>
                        <li><a href="#Select-Autocomplete">Autocomplete</a></li>
                        <li><a href="#Select-UploadList">File upload list</a></li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>

    <main class="col-md-9 col-lg-9" role="main">
        <div class="bs-docs-section">
            <div class="page-header">
                <h1 id="select-section">Select inputs</h1>
            </div>
            <p>
                BForms exposes two ways of building single or multi-select elements using Razor HTML extensions, one way is throw the <code>BsControlAttribute</code> in combination with 
                <code>BsSelectFor</code> helper, the <code>BsSelectFor</code> will reader the specified select input type based on <code>BsControlType</code> enum. 
                Another way is to use the specialized helpers like <code>BsDropDownListFor</code>, <code>BsListBoxFor</code> and so on.
            </p>

            @Html.Partial("_SelectHelper")
        </div>

    </main>
</div>